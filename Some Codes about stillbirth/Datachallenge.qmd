---
title: "Untitled"
format: html
editor: visual
---

# Data loading and processing setting survey design

```{r}
library(haven)
NR <- read_dta("~/Desktop/Data_Challenge /Pregnancy and Postnatal Care/TZNR82FL.DTA")
library(dplyr)

#load data 
NR <- NR %>%
  mutate(
    p32_stillbirth = ifelse(p32 == 2, 1, 0), 
    v106_combined = ifelse(v106 == 3, 2, v106),
    m14_grouped = case_when(
  m14 == 0 ~ "0",
  m14 >= 1 & m14 <= 3 ~ "1-3",
  m14 >= 4 & m14 != 98 ~ "4+",
  m14 == 98 ~ "Don't know",
  TRUE ~ NA_character_  
),
    m80_combined = case_when(
      m80 == 1 ~ "1 [most recent live birth]",
      m80 == 2 ~ "2 [prior live birth]",
      m80 %in% c(3, 4) ~ "3 [combined stillbirth]",
      m80 == 5 ~ "4 [miscarriage/abortion]"
    ),
    v501_combined = case_when(
      v501 %in% c(3, 4) ~ 3,
      v501 == 5 ~ 4,
      TRUE ~ v501
    ),
    mat_age = cut(
      (p3-v011)/12,
      breaks = c(0,13,20,25,35,45,50),
      right = FALSE,
      labels = c("[13,20)", "[20,25)", "[25,35)", "[35,45)", "[45,50)", "50+")
    ), my_pid = seq(1:7281)
  )
# make it number to work 
NR$p32_stillbirth <- as.integer(NR$p32_stillbirth)

library(dplyr)
count(NR, v106_combined)
table(NR$v106_combined)


fourcase <- NR[which(NR$pidx==4),]$caseid
four_notfirst <-
  NR[
    NR$caseid %in% fourcase &
      NR$pidx!=4,
    c("caseid", "pidx","my_pid","p32_stillbirth")
  ] %>%
  mutate(
    prev_sb = 0
  ) # manually confirmed no prior stillbirths, so this code is not usable for other DHS surveys

# 60 women had exactly three recorded pregnancy outcomes, making up 180 rows in NR file
# There are 120 rows that we can assess for history of previous stillbirth
threes <- NR[which(NR$pidx==3),]$caseid
threecase <- threes[!(threes %in% fourcase)]
sbp3 <- NR[NR$caseid %in% threecase, c("caseid", "pidx","my_pid","p32_stillbirth")]

three_recent <-
  sbp3[sbp3$pidx==1,] %>%
  mutate(
    prev_sb = ifelse(
      sbp3[sbp3$pidx==2,]$p32_stillbirth==1 |
        sbp3[sbp3$pidx==3,]$p32_stillbirth==1 ,
      1 , 0
    )
  )
three_middle <- 
  sbp3[sbp3$pidx==2,] %>%
  mutate(
    prev_sb = sbp3[sbp3$pidx==3,]$p32_stillbirth
  )



# 938 women had exactly two pregnancy outcomes, making up 1876 rows in the NR file
# 938 rows can be assessed for history of previous stillbirth
twos <- NR[which(NR$pidx==2),]$caseid
twocase <- twos[!(twos %in% threecase) & !(twos %in% fourcase)]
sbp2 <- NR[NR$caseid %in% twocase, c("caseid", "pidx","my_pid","p32_stillbirth")]
two_assessable <- 
  sbp2[sbp2$pidx==2,] %>%
  mutate(
    prev_sb = sbp2[sbp2$pidx==1,]$p32_stillbirth
  )

# combine three rows of the 4-outcomes table
# # plus 60 rows each for the two assessable 3-outcomes table
# # plus 938 rows of the 2-outcomes table
# 3 + 60 + 60 + 938 = 1061 assessable pregnancy outcomes
assessable <-
  rbind(
    four_notfirst,
    three_recent,
    three_middle,
    two_assessable
  )

# Join the 1061 values of prev_sb into the original data frame
# There will be 6220 NAs
NR <- left_join(
  NR , assessable[,c("my_pid","prev_sb")] , by = join_by("my_pid")
)


#set survey design 
library(survey)
DHS <- svydesign(
  id = NR$v021,       
  strata = NR$v023,    
  weights = NR$v005/1e6,  
  data = NR
)
```

# some draft analysis to understand data

```{r}
NR$v025

###proportion of stillbirth 
svytable(~v025 + p32_stillbirth, design = DHS)


# Basic Rates
prop.table(table(NR$p32_stillbirth, NR$v025))

###make a bar plot here 


#adjust for hypertension 
Model_cof1 <- svyglm(p32_stillbirth ~ v025 *s1125, design = DHS, family = quasibinomial())
exp(coef(Model_cof1))
summary(Model_cof1)
confint_adjusted <- exp(confint(Model_cof1))


#adjust for education
model_cof2 <- svyglm(p32_stillbirth ~ v025 *v106, design = DHS, family = quasibinomial())
exp(coef(model_cof2))
summary(model_cof2)


#adjust for marital status 
model_cof3 <- svyglm(p32_stillbirth ~ v025 + factor(v501), design = DHS, family = quasibinomial())
exp(coef(model_cof3))
summary(model_cof3)

svytable(~p32_stillbirth + v025 + v501,design = DHS)

#adjust for work status 
model_cof4 <- svyglm(p32_stillbirth ~ v025 *factor(v732), design = DHS, family = quasibinomial())
exp(coef(model_cof4))
summary(model_cof4)



#adjust for mode of delivery 
model_cof5 <- svyglm(p32_stillbirth ~ v025 *factor(m17), design = DHS, family = quasibinomial())
exp(coef(model_cof5))
summary(model_cof5)


#adjusted for ANC visits and care (there is missing data )
model_cof6 <- svyglm(p32_stillbirth ~ v025 * m14, design = DHS, family = quasibinomial(),na.action = na.exclude)
exp(coef(model_cof6))
summary(model_cof6)

#anemia adjusted 
model_cof7 <- svyglm(p32_stillbirth ~ v025 *v457, design = DHS, family = quasibinomial())
exp(coef(model_cof7))
summary(model_cof7)

#wantedness of pregnancy adjusted (there is missing data)
model_cof8 <- svyglm(p32_stillbirth ~ v025 *v225, design = DHS, family = quasibinomial(),na.action=na.exclude)
exp(coef(model_cof8))
summary(model_cof8)
#wantedness of pregnancy un-adjusted (there is missing data)
model_cof8_u <- svyglm(p32_stillbirth ~ v225, design = DHS, family = quasibinomial(),na.action=na.exclude)
exp(coef(model_cof8_u))
summary(model_cof8_u)


# adjust for gestational age 
model_cof9 <- svyglm(p32_stillbirth ~ v025 * p20, design = DHS, family = quasibinomial())
exp(coef(model_cof9))
summary(model_cof9)


# adjusted multivariate for sociodemograhic 

count(NR,v012)

# adjust for maternal age ?? or age at pregnancy 
model_cof19 <- svyglm(p32_stillbirth ~ v025 * v012, design = DHS, family = quasibinomial())
exp(coef(model_cof9))
summary(model_cof19)
# un-adjust for maternal age 
model_cof19_u <- svyglm(p32_stillbirth ~ v012, design = DHS, family = quasibinomial())
exp(coef(model_cof19_u))
summary(model_cof19_u)

v245

##history of stillbirth 3 and 4 (recent and prior)
count(NR,m80)
library(haven)
library(dplyr)
# Convert m80 to a numeric or factor type
NR$m80 <- as.numeric(as_factor(NR$m80))

# Now use mutate to create the new column
NR <- NR %>% 
  mutate(m80_right = ifelse(m80 == 4, 1, 0))


# adjust for history of stillbirth
model_cof10 <- svyglm(p32_stillbirth ~ v025 * m80, design = DHS, family = quasibinomial())
exp(coef(model_cof10))
summary(model_cof10)

NR$m80



#Adjusted for multiplicity 
svytable(~p0 + v025 + p32_stillbirth, design = DHS)
model_cof11 <- svyglm(p32_stillbirth ~ v025 * p0, design = DHS, family = quasibinomial())
exp(coef(model_cof11))
summary(model_cof11)

#Adjusted for wealth 
svytable(~v190 + v025 + p32_stillbirth, design = DHS)
prop.table(table(NR$v190,NR$v025))
model_cof12 <- svyglm(p32_stillbirth ~ v025 * factor(v190), design = DHS, family = quasibinomial())
exp(coef(model_cof12))
summary(model_cof12)


##history of stillbirth 3 and 4 (recent and prior) 1 and 2 are most recent live birth and previous live birth 
# 5 is miscarriage 

svytable(~p32_stillbirth + v025 + m80, design = DHS)
count(NR,m80)
count(NR,m80)
prop.table(table(NR$m80, NR$v025))
count(NR,v025)

# correct prop 
prop.table(svytable(~ p32_stillbirth + v025, design = DHS) ,margin = 2) *100


NR$m80
svytable(~v025 + m80, design = DHS)/100
###### Ratio #####

prop.table()
```

```{r}
```

### Bivariate analysis

```{r}

#mat_age unadjusted 
model_unadjusted_age<- svyglm(p32_stillbirth ~ factor(mat_age), design = DHS, family = quasibinomial(),na.action(na.exclude))
print (exp (coef(model_unadjusted_age)))
print (exp (confint(model_unadjusted_age)))
print (summary(model_unadjusted_age)$coefficients)

#Un-udjusted model v025 rural vs.urban
model_unadjusted <- svyglm(p32_stillbirth ~ factor(v025), design = DHS, family = quasibinomial(),na.action(na.exclude))
print (exp (coef(model_unadjusted)[2]))
print (exp (confint(model_unadjusted)[2, ]))
print (summary(model_unadjusted)$coefficients[2,"Pr(>|t|)"])
# un-adjust for hypertension 
Model_cof1_u <- svyglm(p32_stillbirth ~ factor(s1125), design = DHS, family = quasibinomial(),na.action(na.exclude))
prop.table(svytable(~p32_stillbirth + v025 + m80, design = DHS))

print (exp (coef(Model_cof1_u)[2]))
print (exp (confint(Model_cof1_u)[2, ]))
print (summary(Model_cof1_u)$coefficients[2,"Pr(>|t|)"])
#un-adjust for education
model_cof2_u <- svyglm(p32_stillbirth ~  factor(v106_combined), design = DHS, family = quasibinomial(),na.action(na.exclude))
prop.table(table(NR$p32_stillbirth, NR$v106))
NR$v106
print (exp (coef(model_cof2_u)))
print (exp (confint(model_cof2_u)))
print (summary(model_cof2_u)$coefficients[,"Pr(>|t|)"])
count(NR,v106)
#un-adjust for marital status 
model_cof3_u <- svyglm(p32_stillbirth ~  factor(v501_combined), design = DHS, family = quasibinomial(),na.action(na.exclude))
count(NR,v501)
print (exp (coef(model_cof3_u)))
print (exp (confint(model_cof3_u)))
print (summary(model_cof3_u)$coefficients[,"Pr(>|t|)"])


# Un-Adjusted for wealth 
model_cof12_u <- svyglm(p32_stillbirth ~ factor(v190), design = DHS, family = quasibinomial(),na.action(na.exclude))
print (exp (coef(model_cof12_u)))
print (exp (confint(model_cof12_u)))
print (summary(model_cof12_u)$coefficients[,"Pr(>|t|)"])

#un-adjust for work status 
model_cof4_u <- svyglm(p32_stillbirth ~ factor(v732), design = DHS, family = quasibinomial(),na.action(na.exclude))
print (exp (coef(model_cof4_u)))
print (exp (confint(model_cof4_u)))
print (summary(model_cof4_u)$coefficients[,"Pr(>|t|)"])


#un-adjust for mode of delivery 
model_cof5_u <- svyglm(p32_stillbirth ~ factor(m17), design = DHS, family = quasibinomial(),na.action(na.exclude))
print (exp (coef(model_cof5_u)))
print (exp (confint(model_cof5_u)))
print (summary(model_cof5_u)$coefficients[,"Pr(>|t|)"])


#un-adjusted for ANC visits and care (there is missing data )
model_cof6_u <- svyglm(p32_stillbirth ~ factor(m14_grouped), design = DHS, family = quasibinomial(),na.action(na.exclude))
print (exp (coef(model_cof6_u)))
print (exp (confint(model_cof6_u)))
print (summary(model_cof6_u)$coefficients[,"Pr(>|t|)"])

#anemia un-adjusted 
model_cof7_u <- svyglm(p32_stillbirth ~  factor(v457), design = DHS, family = quasibinomial(),na.action(na.exclude))
print (exp (coef(model_cof7_u)))
print (exp (confint(model_cof7_u)))
print (summary(model_cof7_u)$coefficients[,"Pr(>|t|)"])


# un-adjust for gestational age (dont use it )
model_cof9_u <- svyglm(p32_stillbirth ~ p20, design = DHS, family = quasibinomial(),na.action(na.exclude))
exp(coef(model_cof9_u))
summary(model_cof9_u)

library(survey)
# un-adjust for history of stillbirth refer to JOE's code this one does not work
new_glm <- svyglm(p32_stillbirth~prev_sb, design = DHS, family = quasibinomial())
print (exp (coef(new_glm)))
print (exp (confint(new_glm)))
print (summary(new_glm)$coefficients)

# un-adjusted for multiplicity of pregnancy 
svytable(~p0 + v025 + p32_stillbirth, design = DHS)
model_cof11_u <- svyglm(p32_stillbirth ~ factor(p0), design = DHS, family = binomial(),na.action(na.exclude))
print (exp (coef(model_cof11_u)))
print (exp (confint(model_cof11_u)))
print (summary(model_cof11_u)$coefficients[,"Pr(>|t|)"])

```

#### Multivariate analysis

socio-demographic age, education marital status

```{r}

model_1_a <- svyglm(p32_stillbirth ~ factor(v025) + 
                      factor(mat_age) + factor (v106) + factor (v501),design = DHS, family = quasibinomial(), na.action(na.exclude))

print (exp (coef(model_1_a)))
print (exp (confint(model_1_a)))
print (summary(model_1_a)$coefficients[,"Pr(>|t|)"])


```

model 1 :model 1 + wealth +work status

```{r}
model_2_a <- svyglm(p32_stillbirth ~ factor(v025) + 
                      factor(mat_age) + factor (v106_combined) + factor (v501) + factor(v732) + factor(v190),design = DHS, family = quasibinomial(),na.action(na.exclude))

print (exp (coef(model_2_a)))
print (exp (confint(model_2_a)))
print (summary(model_2_a)$coefficients[,"Pr(>|t|)"])


```

model 2 + medical factors hypertension and anemia

```{r}
model_3_a <- svyglm(p32_stillbirth ~ factor(v025) + 
                      factor(mat_age) + factor (v106_combined) + factor (v501) + factor(v732) + factor(v190) + factor(v457) +factor(s1125),design = DHS, family = quasibinomial(),na.action(na.exclude))

print (exp (coef(model_3_a)))
print (exp (confint(model_3_a)))
print (summary(model_3_a)$coefficients[,"Pr(>|t|)"])
```

model4 : model 3 + pregnancy factors , ANC + history of stillbirth +mode of delivery + stillbirth

```{r}
model_4_a <- svyglm(p32_stillbirth ~ factor(v025) + 
                      factor(mat_age) + factor (v106_combined) + factor (v501) + factor(v732) + factor(v190) + factor(v457) +factor(s1125) + factor(m14_grouped)+ factor(m17) + factor(p0) + factor(prev_sb),design = DHS, family = quasibinomial(),na.action(na.exclude))

print (exp (coef(model_4_a)))
print (exp (confint(model_4_a)))
print (summary(model_4_a)$coefficients)
```

#### NEW set for everything all over again

```{r}
library(survey)
library(dplyr)
library(haven)

## Load data 
NR <- read_dta("~/Desktop/Data_Challenge /Pregnancy and Postnatal Care/TZNR82FL.DTA")

### make a new dataframe for regressions 
df <-
  NR[
    which(NR$p32 <= 2) , # 6709 records out of 7281
    c( "caseid", "v025", "p32",
       "v005", "v011", "v021", "v023", "v024", # interview characteristics
       "p3", "p20", "m14", "m17", # pregnancy outcome information
       "v106", "v190", "v445", "v501", "v731", # maternal background
       "s1125" # hypertension
    )
  ] %>%
  mutate(
    wt = v005/1e6,
    stillbirth = ifelse(p32==2, 1, 0),
    # residence = relevel(factor(v025), ref=2),
    matage = cut((p3-v011)/12, breaks = c(0,20,25,35,50), right = FALSE),
    gest = relevel(
      cut(p20, breaks = c(0,8,10), right = TRUE), ref = 2
    ),
    anc = ifelse(
      is.na(m14) | m14==98, "unknown" ,
      cut(m14, breaks = c(0,1,4,98,100), right = FALSE)
    ),
    emp_year = ifelse(v731==0, 0, 1),
    edu = factor(
      ifelse( v106==0,0, ifelse(v106==1,1,2) )
    ),
    bmi = relevel(
      cut(v445, breaks = c(1200, 1850, 2500, 3000, 6000)), ref = 2
    ),
    marr = factor(
      ifelse(
        v501==0,"Never",
        ifelse(
          v501==1 | v501==2, "Current", "Formerly"
        )
      )
    ),
    wealth = factor(v190)
  )

design <-
  svydesign(
    id=~v021,
    strata=~v023,
    weights=~wt,
    data=df
  )



df$v025

sb_forest <- as.data.frame(matrix(nrow=11,ncol=5))
names(sb_forest) <- c("each_factor","p-value","ORadj","OR_lower","OR_higher")

###### bivariate analysis 
glm_un <- svyglm(stillbirth~v025, design, family=quasibinomial())
sb_forest[1,] <-
  c("residence","NA",
    exp(coef(glm_res))[2],
    exp(confint(glm_res))[2,1],
    exp(confint(glm_res))[2,2]
  )

exp(coef(glm_un))
exp(confint(glm_un))
### for age 
glm_age <- svyglm(stillbirth~v025*matage, design, family=quasibinomial())
sb_forest[2,] <-
  c("age","0.003",
    exp(coef(glm_age))[[2]],
    exp(confint(glm_age))[[2,1]],
    exp(confint(glm_age))[[2,2]]
  )

## education
glm_edu <- svyglm(stillbirth~v025*edu, design, family=quasibinomial())
sb_forest[3,] <-
  c("edu","<0.001",
    exp(coef(glm_edu))[[2]],
    exp(confint(glm_edu))[[2,1]],
    exp(confint(glm_edu))[[2,2]]
  )
# hypertension
glm_hyp <- svyglm(stillbirth~v025*s1125, design, family=quasibinomial())
sb_forest[4,] <-
  c("hypertension","<0.001",
    exp(coef(glm_hyp))[[2]],
    exp(confint(glm_hyp))[[2,1]],
    exp(confint(glm_hyp))[[2,2]]
  )
## C section 
glm_mode <- svyglm(stillbirth~v025*m17, design, family=quasibinomial())
sb_forest[5,] <-
  c("c-section","<0.001",
    exp(coef(glm_mode))[[2]],
    exp(confint(glm_mode))[[2,1]],
    exp(confint(glm_mode))[[2,2]]
  )

## marital status
glm_marr <- svyglm(stillbirth~v025*marr, design, family=quasibinomial())
sb_forest[6,] <-
  c("married","0.002",
    exp(coef(glm_marr))[[2]],
    exp(confint(glm_marr))[[2,1]],
    exp(confint(glm_marr))[[2,2]]
  )
## wealth 
glm_wealth <- svyglm(stillbirth~v025*wealth, design, family=quasibinomial())
sb_forest[7,] <-
  c("wealth","<0.001",
    exp(coef(glm_wealth))[[2]],
    exp(confint(glm_wealth))[[2,1]],
    exp(confint(glm_wealth))[[2,2]]
  )

## work status
glm_emp <- svyglm(stillbirth~v025*emp_year, design, family=quasibinomial())
sb_forest[8,] <-
  c("employment","0.021",
    exp(coef(glm_emp))[[2]],
    exp(confint(glm_emp))[[2,1]],
    exp(confint(glm_emp))[[2,2]]
  )

## gestational age
glm_gest <- svyglm(stillbirth~v025*gest, design, family=quasibinomial())
sb_forest[9,] <-
  c("preterm","0.011",
    exp(coef(glm_gest))[[2]],
    exp(confint(glm_gest))[[2,1]],
    exp(confint(glm_gest))[[2,2]]
  )

## BMI 
glm_bmi <- svyglm(stillbirth~v025*bmi, design, family=quasibinomial())
sb_forest[10,] <-
  c("bmi","<0.001",
    exp(coef(glm_bmi))[[2]],
    exp(confint(glm_bmi))[[2,1]],
    exp(confint(glm_bmi))[[2,2]]
  )

### just area #### 

glm1 <-
  svyglm(
    stillbirth~v025,
    design,
    family = quasibinomial()
  )

exp(coef(glm1))
exp(confint(glm1))

##### + socioeconomic 
glm2 <-
  svyglm(
    stillbirth~v025+
      matage+marr+edu,
    design,
    family = quasibinomial()
  )
exp(coef(glm2))
exp(confint(glm2))

#### + socioeconomic 
glm3 <-
  svyglm(
    stillbirth~v025+
      matage+marr+edu+
      emp_year+wealth,
      design,
    family = quasibinomial()
  )
exp(coef(glm3))
exp(confint(glm3))

### medical factors 
glm4 <-
  svyglm(
    stillbirth~v025+
      matage+marr+edu+
      emp_year+wealth+
      s1125,
     design,
    family = quasibinomial()
  )
exp(coef(glm4))
exp(confint(glm4))
#### +pregnancy factors 
final_mod <-
  svyglm(
    stillbirth~v025+
      matage+marr+edu+
      emp_year+wealth+
      s1125+
      m17,
    design,
    family = quasibinomial()
  )

exp(coef(final_mod))
exp(confint(final_mod))


######### previous regressionss 

fullbirth <-
  NR[
    which(NR$p32 <= 2) , # 6709 records out of 7281
    c( "caseid", "v025", "p32",
       "v005", "v011", "v021", "v023", "v024", # interview characteristics
       "pord", "p0", "p3", "p20", # pregnancy outcome information
       "v106", "v175", "v190", "v225", # maternal background
       "v445", "v457", "v463z", "v485b", # health behaviours
       "v501", "v731", # maternal characteristics
       "m3a","m3b","m3c","m3d","m3e","m3f","m3g","m3h","m3i","m3k","m3n",
       "m14", "m17", "m45", # pregnancy experiences
       "s1125" # hypertension
    )
  ] %>%
  mutate(
    wt = v005/1e6,
    stillbirth = ifelse(p32==2, 1, 0),
    matage = cut((p3-v011)/12, breaks = c(0,20,25,35,50), right = FALSE),
    gest = cut(p20, breaks = c(0,8,10), right = TRUE),
    anc = ifelse(
      is.na(m14) | m14==98, "unknown" ,
      cut(m14, breaks = c(0,1,4,98,100), right = FALSE)
    ),
    emp_year = ifelse(v731==0, 0, 1),
    edu = ifelse(
      v106==0,0, ifelse(v106==1,1,2)
    ),
    bmi = cut(v445, breaks = c(1200, 1850, 2500, 3000, 6000)),
    marr = factor(
      ifelse(
        v501==0,"Never",
        ifelse(
          v501==1 | v501==2, "Current", "Formerly"
        )
      )
    )
  )

sb_design <-
  svydesign(
    id=~v021,
    strata=~v023,
    weights=~wt,
    data=fullbirth
  )



# new column for pid added 

lb_id <- NR[which(NR$livebirth==1),]$caseid
sb_id <- NR[which(NR$stillbirth==1),]$caseid

### history of stillbirth mutated to only two categories 
psb <- 
  NR[ 
    NR$caseid %in% lb_id | 
      NR$caseid %in% sb_id, 
  ]

# There are 106 rows that we can assess for history of previous stillbirth
threecase <- psb[which(psb$pidx==3),]$caseid
psb3 <-
  psb[psb$caseid %in% threecase,
      c("caseid", "pidx","my_pid",
        "livebirth","stillbirth","miscarriage","abortion")
  ]

three_recent <-
  psb3[psb3$pidx==1,] %>%
  mutate(
    prev_sb = ifelse(
      psb3[psb3$pidx==2,]$stillbirth==1 |
        psb3[psb3$pidx==3,]$stillbirth==1 ,
      1 , 0
    ),
    prev_mc = ifelse(
      psb3[psb3$pidx==2,]$miscarriage==1 |
        psb3[psb3$pidx==3,]$miscarriage==1 ,
      1 , 0
    ),
    prev_ab = ifelse(
      psb3[psb3$pidx==2,]$abortion==1 |
        psb3[psb3$pidx==3,]$abortion==1 ,
      1 , 0
    )
  )

three_middle <- 
  psb3[psb3$pidx==2,] %>%
  mutate(
    prev_sb = psb3[psb3$pidx==3,]$stillbirth,
    prev_mc = psb3[psb3$pidx==3,]$miscarriage,
    prev_ab = psb3[psb3$pidx==3,]$abortion
  )


urb_pop <- svytable(~v025, sb_design)[[1]]
rur_pop <- svytable(~v025, sb_design)[[2]]

######################################################################

# anaemia, 3359 

anm <- fullbirth[!is.na(fullbirth$v457),]
anm_design <-
  svydesign(
    id=~v021,
    strata=~v023,
    weights=~wt,
    data=anm
  )
svytable(~v457, anm_design)
svytable(~v025, anm_design)

# bmi, 3367 

bmi_design <-
  fullbirth[!is.na(fullbirth$bmi),] %>%
  svydesign(
    id=~v021,
    strata=~v023,
    weights=~wt,
    data=.
  )
summary(svytable(~bmi+v025, bmi_design),statistic = "Chisq")

library(survey)
###Model One 
model1 <- svyglm( stillbirth~relevel(factor(v025), ref = 2),
        sb_design, family = quasibinomial() )
exp(coef(model1))
exp(confint(model1))

NR$m17

#Model 2 model 1 + sociodemographic 

model2 <- svyglm(stillbirth ~ relevel(factor(v025), ref = 2) + 
                   factor(matage) + 
                   factor(edu) + 
                   factor(marr),
                 design = sb_design, 
                 family = quasibinomial() )


exp(coef(model2))
exp(confint(model2))

# Model 3  model 2 + wealth + work 

model3 <- svyglm(stillbirth ~ relevel(factor(v025), ref = 2) + 
                   factor(matage) + 
                   factor(edu) + 
                   factor(marr) +factor(emp_year) + factor(v190),
                 design = sb_design, 
                 family = quasibinomial() ) 

exp(coef(model3))
exp(confint(model3))

###medical status adding 
# Model 4  model 3 + anemia(not signofcant not included ) + hypertension 

model4 <- svyglm(stillbirth ~ relevel(factor(v025), ref = 2) + 
                   factor(matage) + 
                   factor(edu) + 
                   factor(marr) +factor(emp_year) + factor(v190)+factor(s1125),
                 na.action(na.exclude),
                 design = sb_design, 
                 family = quasibinomial() ) 

exp(coef(model4))
exp(confint(model4))

#PREGNANCY fACTORS ADdING 


final <- svyglm(stillbirth ~ relevel(factor(v025), ref = 2) + 
                   factor(matage) + 
                   factor(edu) + 
                   factor(marr) +factor(emp_year) + factor(v190) +factor(s1125)+
                   factor(anc) + factor(m17),na.action(na.exclude),
                 design = sb_design, 
                 family = quasibinomial() ) 

exp(coef(final))
exp(confint(final))


# Read the data into R
df <- read.csv("/path/to/forest_plot_data.csv")

# Create the forest plot
ggplot(df, aes(y = Factor, x = OR, xmin = CI_low, xmax = CI_high)) +
  geom_point() +
  geom_errorbarh(height = 0.2) +
  geom_vline(xintercept = 1, linetype = "dashed") +
  theme_minimal() +
  labs(x = "Odds Ratio (95% CI)", y = "Factor") +
  coord_flip()  


install.packages('forestplot')
library(forestplot)

model_labels <- c("Model 1: Stillbirth Rate ~ Urban vs Rural",
                  "Model 2: Model 1 + (sociodemographic)",
                  "Model 3: Model 2 + (socioeconomic)",
                  "Model 4: Model 3 + (Medical factors)",
                  "Final Model: Model 4 + (Pregnancy factors)")

# Odds Ratios and Confidence Intervals
mean <- c(1.51, 1.327, 0.80, 0.78, 0.77)
lower <- c(0.95, 0.81, 0.43, 0.42, 0.41)
upper <- c(2.40, 2.16, 1.48, 1.45, 1.45)

# matrix 
table_matrix <- cbind(mean, lower, upper)



# parameters to plot 
txt_gp <- fpTxtGp(label = gpar(fontsize = 9),  # Model description labels
                  title = gpar(fontsize = 9.5),  # Title
                  xlab = gpar(fontsize = 9.5),   # X-axis label
                  ticks = gpar(fontsize = 9))  # Tick labels on the X-axis

# Create the forest plot with customized font sizes
forestplot(labeltext = model_labels,
           mean = table_matrix[,1],
           lower = table_matrix[,2],
           upper = table_matrix[,3],
           zero = 1, # Line of no effect
           xlog = FALSE, # Use TRUE for log scale
           title = "Plot of Adjusted Confounders Odds Ratio between Rural and Urban",
           xlab = "Odds Ratios (95% CI)",
           lineheight = "auto",
           boxsize = 0.2,
           col = fpColors(box = "royalblue", line = "darkblue", summary = "royalblue"),
           txt_gp = txt_gp) # Apply the text graphical parameters

NR$v025
```
