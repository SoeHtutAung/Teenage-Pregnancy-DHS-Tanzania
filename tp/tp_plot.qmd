---
title: "Plot"
format: html
editor: visual
---

```{r setup}
library(ggplot2)
library(jtools)
library(survey)
library(dplyr)
library(labelled)
library(ggcorrplot)
library(vip)
library(tibble)
library(forcats)
library(forestplot)
library(gridExtra)
```

```{r load}
#load("tp.RData") # Given that all objects are already saved inside RData
```

## 1. Forest plot

### 1.1 Regressions (summ of jtools package)

```{r forestplot}
## plotting
plot_summs(modelfit) # only one model
plot_summs(fitted = modelfit, full = modelm_5) # compare full vs fitted
```

## 2. Simple plots - ggplot2

Plan for plots

```{r planforplot}
# Step 1 > make table object using survey package
# Step 2 > use ggplot2 for plotting
```

```{r plot_summary}
# TO CHANGE T
round(svytable(~teen_preg + v025, design = dhs), 0) %>%
  as.data.frame() %>%
  group_by(v025) %>%
  mutate(n = sum(Freq), tpr = Freq / n) %>%
  ungroup() %>%
  ggplot(aes(x = v025, y = tpr, fill = factor(teen_preg))) +
  geom_col()

```

### 2.1 Teenage pregnancy outcomes

```{r plot_tpoutcome}
# teenage pregnancy outcome - live birth
round((svytable(~teen_preg + birth_gp + v025, 
                design = dhs, na.action = na.pass)/1e6),0) %>%
  as.data.frame() %>% 
  filter (teen_preg == 1) %>%
  ggplot(aes(x = v025, y = Freq, fill = birth_gp)) +
  geom_bar(position = "stack", stat = "identity") +
  theme_minimal()

# teenage pregnancy outcome - pregnancy loss
round ((svytable(~teen_preg + loss_gp + v025, 
                design = dhs, na.action = na.pass)/1e6),0) %>%
  as.data.frame() %>% 
  filter (teen_preg == 1) %>%
  ggplot(aes(x = v025, y = Freq, fill = loss_gp)) +
  geom_bar(position = "stack", stat = "identity") +
  theme_minimal()
```

### 2.2 Socio demographic

```{r plot_sd}
## age
svyby(formula = ~v012, by = ~v025 + teen_preg, design = dhs, 
      FUN = svymean, vartype=c("ci")) %>% as.data.frame() %>%
  ggplot (aes (x = factor(teen_preg), y = v012)) +
  geom_boxplot() + facet_wrap(~v025) +
  geom_errorbar(aes(ymin = ci_l, ymax = ci_u), width = 0.2) +
  scale_x_discrete(labels = c("0" = "Not", "1" = "Teenage pregnancy")) +
  ylim (15,19)

## education
round((svytable(~edu_gp + v025 + teen_preg, design = dhs)/1e6),0) %>%
  as.data.frame() %>% 
  ggplot(aes(x = teen_preg, y = Freq, fill = edu_gp)) +
  geom_bar(position = "fill", stat = "identity") +
  facet_wrap(~v025) +
  scale_x_discrete(labels = c("0" = "Not", "1" = "Teenage pregnancy")) +
  theme_minimal()

## marital status
round((svytable(~marital + v025 + teen_preg, design = dhs)/1e6),0) %>%
  as.data.frame() %>% 
  ggplot(aes(x = teen_preg, y = Freq, fill = marital)) +
  geom_bar(position = "fill", stat = "identity") +
  facet_wrap(~v025) +
  scale_x_discrete(labels = c("0" = "Not", "1" = "Teenage pregnancy")) +
  theme_minimal()

## age at first marriage or union
svyby(formula = ~v511, by = ~v025 + teen_preg, design = dhs, 
      FUN = svymean, vartype=c("ci"),na.rm = TRUE) %>% as.data.frame() %>%
  filter (!is.na(v511)) %>%
  ggplot (aes (x = factor(teen_preg), y = v511)) +
  geom_boxplot() + facet_wrap(~v025) +
  geom_errorbar(aes(ymin = ci_l, ymax = ci_u), width = 0.2) +
  scale_x_discrete(labels = c("0" = "Not", "1" = "Teenage pregnancy")) +
  ylim (15,19)

## age at first sex
svyby(formula = ~v531, by = ~v025 + teen_preg, design = dhs, 
      FUN = svymean, vartype=c("ci"),na.rm = TRUE) %>% as.data.frame() %>%
  filter (!is.na(v531)) %>%
  ggplot (aes (x = factor(teen_preg), y = v531)) +
  geom_boxplot() + facet_wrap(~v025) +
  geom_errorbar(aes(ymin = ci_l, ymax = ci_u), width = 0.2) +
  scale_x_discrete(labels = c("0" = "Not", "1" = "Teenage pregnancy")) +
  ylim (15,19)
```

### 2.3 Partner characteristics

```{r plot_partner}
## age of partner
svyby(formula = ~v730, by = ~v025 + teen_preg, design = dhs,
      FUN = svymean, vartype=c("ci"),na.rm = TRUE) %>% as.data.frame() %>%
  filter (!is.na(v730)) %>%
  ggplot (aes (x = factor(teen_preg), y = v730)) +
  geom_boxplot() + facet_wrap(~v025) +
  geom_errorbar(aes(ymin = ci_l, ymax = ci_u), width = 0.2) +
  scale_x_discrete(labels = c("0" = "Not", "1" = "Teenage pregnancy")) +
  ylim (15,49)

## education of partner
round((svytable(~v701 + v025 + teen_preg, design = dhs)/1e6),0) %>%
  as.data.frame() %>% 
  ggplot(aes(x = teen_preg, y = Freq, fill = v701)) +
  geom_bar(position = "fill", stat = "identity") +
  facet_wrap(~v025) +
  scale_x_discrete(labels = c("0" = "Not", "1" = "Teenage pregnancy")) +
  theme_minimal()
```

### 2.4 Economic status

```{r plot_economic}
## wealth index
round((svytable(~v190 + v025 + teen_preg, design = dhs)/1e6),0) %>%
  as.data.frame() %>% 
  ggplot(aes(x = teen_preg, y = Freq, fill = v190)) +
  geom_bar(position = "fill", stat = "identity") +
  facet_wrap(~v025) +
  scale_x_discrete(labels = c("0" = "Not", "1" = "Teenage pregnancy")) +
  theme_minimal()

## employment
round((svytable(~employ_current + v025 + teen_preg, design = dhs)/1e6),0) %>%
  as.data.frame() %>% 
  ggplot(aes(x = teen_preg, y = Freq, fill = employ_current)) +
  geom_bar(position = "fill", stat = "identity") +
  facet_wrap(~v025) +
  scale_x_discrete(labels = c("0" = "Not", "1" = "Teenage pregnancy")) +
  theme_minimal()
```

### 2.5 Health behaviour

For health behavior related variables, it is more simple and clear to compare only urban vs rural, rather than dis-aggregating teenage pregnancy status.

```{r plot_hbehave}
## knoweldge on contraceptive methods *** includes teenage pregnancy
round((svytable(~contra_know_any + v025 + teen_preg, design = dhs)/1e6),0) %>%
  as.data.frame() %>% 
  ggplot(aes(x = teen_preg, y = Freq, fill = contra_know_any)) +
  geom_bar(position = "fill", stat = "identity") +
  facet_wrap(~v025) +
  scale_x_discrete(labels = c("0" = "Not", "1" = "Teenage pregnancy")) +
  theme_minimal()

## current contraceptive use
round((svytable(~contra_current + v025 + teen_preg, design = dhs)/1e6),0) %>%
  as.data.frame() %>% 
  ggplot(aes(x = v025, y = Freq, fill = contra_current)) +
  geom_bar(position = "fill", stat = "identity") +
  scale_x_discrete(labels = c("1" = "Urban", "2" = "Rural")) +
  theme_minimal()

## intention to use contraception in the future
round((svytable(~contra_future + v025 + teen_preg, design = dhs)/1e6),0) %>%
  as.data.frame() %>% 
  ggplot(aes(x = v025, y = Freq, fill = contra_future)) +
  geom_bar(position = "fill", stat = "identity") +
  scale_x_discrete(labels = c("1" = "Urban", "2" = "Rural")) +
  theme_minimal()

## access to information about family planning
round((svytable(~fp_info + v025 + teen_preg, design = dhs)/1e6),0) %>%
  as.data.frame() %>% 
  ggplot(aes(x = v025, y = Freq, fill = fp_info)) +
  geom_bar(position = "fill", stat = "identity") +
  scale_x_discrete(labels = c("1" = "Urban", "2" = "Rural")) +
  theme_minimal()

## pre or intra or extra marital sex (for teenage pregnancies only) *** only for TP
round((svytable(~premaritalsex + v025 + teen_preg, design = dhs)/1e6),0) %>%
  as.data.frame() %>% filter (teen_preg ==1) %>%
  ggplot(aes(x = v025, y = Freq, fill = premaritalsex)) +
  geom_bar(position = "fill", stat = "identity") +
  scale_x_discrete(labels = c("1" = "Urban", "2" = "Rural")) +
  theme_minimal()
```

### 2.6 Access to services

For health access related variables, it is more simple and clear to compare only urban vs rural, rather than disaggregating teenage pregnancy status. In statcompiler, we can produce map to visualize the significant variables (such as distance) region-wise \> then compare with TPR/disparities.

```{r plot_access}
## problem with access to health services - permission to go
round((svytable(~v467b + v025 + teen_preg, design = dhs)/1e6),0) %>%
  as.data.frame() %>% filter (teen_preg ==1) %>%
  ggplot(aes(x = v025, y = Freq, fill = v467b)) +
  geom_bar(position = "fill", stat = "identity") +
  scale_x_discrete(labels = c("1" = "Urban", "2" = "Rural")) +
  scale_fill_manual(
    values = c("1" = "orange", "2" = "tan"),
    labels = c("1" = "Big problem", "2" = "Not a problem"),  # Custom legend labels
    name = "Problem in getting permission") +  # Custom legend title
  theme_minimal()

## problem with access to health services - money needed
round((svytable(~v467c + v025 + teen_preg, design = dhs)/1e6),0) %>%
  as.data.frame() %>% filter (teen_preg ==1) %>%
  ggplot(aes(x = v025, y = Freq, fill = v467c)) +
  geom_bar(position = "fill", stat = "identity") +
  scale_x_discrete(labels = c("1" = "Urban", "2" = "Rural")) +
  scale_fill_manual(
    values = c("1" = "orange", "2" = "tan"),
    labels = c("1" = "Big problem", "2" = "Not a problem"),  # Custom legend labels
    name = "Problem in money needed") +  # Custom legend title
  theme_minimal()

## problem with access to health services - distance
round((svytable(~v467d + v025 + teen_preg, design = dhs)/1e6),0) %>%
  as.data.frame() %>% filter (teen_preg ==1) %>%
  ggplot(aes(x = v025, y = Freq, fill = v467d)) +
  geom_bar(position = "fill", stat = "identity") +
  scale_x_discrete(labels = c("1" = "Urban", "2" = "Rural")) +
  scale_fill_manual(
    values = c("1" = "orange", "2" = "tan"),
    labels = c("1" = "Big problem", "2" = "Not a problem"),  # Custom legend labels
    name = "Problem in distance") +  # Custom legend title
  theme_minimal()

## problem with access to health services - not want to go alone
round((svytable(~v467f + v025 + teen_preg, design = dhs)/1e6),0) %>%
  as.data.frame() %>% filter (teen_preg ==1) %>%
  ggplot(aes(x = v025, y = Freq, fill = v467f)) +
  geom_bar(position = "fill", stat = "identity") +
  scale_x_discrete(labels = c("1" = "Urban", "2" = "Rural")) +
  scale_fill_manual(
    values = c("1" = "orange", "2" = "tan"),
    labels = c("1" = "Big problem", "2" = "Not a problem"),  # Custom legend labels
    name = "Don't want to go alone") +  # Custom legend title
  theme_minimal()
```

### 2.7 Household characteristics

```{r plot_hh}
## household size
svyby(formula = ~hv012, by = ~v025 + teen_preg, design = dhs,
      FUN = svymean, vartype=c("ci")) %>% as.data.frame() %>%
  ggplot (aes (x = factor(teen_preg), y = hv012)) +
  geom_boxplot() + facet_wrap(~v025) +
  geom_errorbar(aes(ymin = ci_l, ymax = ci_u), width = 0.2) +
  scale_x_discrete(labels = c("0" = "Not", "1" = "Teenage pregnancy")) +
  ylim (2,10)

## highest household education attainment
round((svytable(~edu + v025 + teen_preg, design = dhs)/1e6),0) %>%
  as.data.frame() %>% 
  ggplot(aes(x = teen_preg, y = Freq, fill = edu)) +
  geom_bar(position = "fill", stat = "identity") +
  facet_wrap(~v025) +
  scale_x_discrete(labels = c("0" = "Not", "1" = "Teenage pregnancy")) +
  theme_minimal()

## sex of household head
round((svytable(~hv219 + v025 + teen_preg, design = dhs)/1e6),0) %>%
  as.data.frame() %>% 
  ggplot(aes(x = teen_preg, y = Freq, fill = hv219)) +
  geom_bar(position = "fill", stat = "identity") +
  facet_wrap(~v025) +
  scale_x_discrete(labels = c("0" = "Not", "1" = "Teenage pregnancy")) +
  theme_minimal()
```

### 2.8 Migration

```{r plot_migration}
## recent migration
round((svytable(~recent_migrate + v025 + teen_preg, design = dhs)/1e6),0) %>%
  as.data.frame() %>% 
  ggplot(aes(x = teen_preg, y = Freq, fill = recent_migrate)) +
  geom_bar(position = "fill", stat = "identity") +
  facet_wrap(~v025) +
  scale_x_discrete(labels = c("0" = "Not", "1" = "Teenage pregnancy")) +
  theme_minimal()

## type of migration (*** for recently migrated only ***)
round((svytable(~type_migrate + v025 + teen_preg + recent_migrate, 
                design = dhs)/1e6),0) %>%
  as.data.frame() %>% filter (recent_migrate == 1) %>%
  ggplot(aes(x = teen_preg, y = Freq, fill = type_migrate)) +
  geom_bar(position = "fill", stat = "identity") +
  facet_wrap(~v025) +
  scale_x_discrete(labels = c("0" = "Not", "1" = "Teenage pregnancy")) +
  scale_fill_manual(
    values = c("1" = "blue", "2" = "#009999", "3" = "orange", "4" = "gold"),
    labels = c("1" = "Urban to urban", "2" = "Rural to urban",
               "3" = "Urban to rural", "4" = "Rural to rural"),
    name = "Migration type")
  theme_minimal()
```

## 3. Modified plots

*Two sources: <https://rpubs.com/John_1324/1039222>, <https://r-graph-gallery.com/ggplot2-package.html>*

To visualize variables of importance in regression model. *Can build one plot after compiling vip of all outcomes and select variables of interest.*

```{r vipplots}
#check the output in vip package 
vip(modelm_5, num_features = 8, geom = "point", horizontal = TRUE) +
  theme_light()

# want to edit variable names, so manually plot vip for 8 variables with p-value of <0.05 in summary() 
# create namelist
names <- c("In marriage/union", "Past marriage/union", "Age", "Information about family planning","Secondar or higher education","Knows contraceptive method", "Problem access to service - being alone","Highest education level of household")
# create a df
viptable <- caret::varImp(modelm_5) %>% arrange(desc(abs(Overall))) %>% 
  head(8) %>% mutate (names = names)
# plot
viptable %>% # arrange(desc(abs(Overall))) %>%
  ggplot () + 
  geom_point(aes(Overall,fct_reorder(names,Overall))) +
  labs (x = "Importance") +
  theme_minimal() +
  theme(axis.title.y = element_blank()) 
```

### 3.1 Bars (100% stack)

```{r modified_bars}
# education status
round((svytable(~edu_gp + v025 + teen_preg, design = dhs)/1e6),0) %>%
  as.data.frame() %>% 
  ## plotting
  ggplot(aes(x = v025, y = Freq, fill = edu_gp)) +
  geom_bar(position = "fill", stat = "identity") +
  scale_x_discrete(labels = c("1" = "Urban", "2" = "Rural")) +
  theme_minimal() +
  scale_fill_manual(
    values = c("0" = "#eb442c", "1" = "#ffe134", "2" = "#7bb662"),
    labels = c("0" = "No education", "1" = "Primary", "2" = "Secondary +"), 
    name = "Education") +
  labs(x = "Type of residence", y = "Proportion") +
  facet_grid(rows = vars(teen_preg),labeller = labeller(
    teen_preg = c("0" = "No", "1" = "Teenage pregnancy")))
```

### Contextual plot - for presentation 

```{r onelayer}
# marital status
p1 <- 
  round((svytable(~marital + v025, design = dhs)/1e6),0) %>%
  as.data.frame() %>%
  ggplot(aes(x = v025, y = Freq, fill = marital)) +
  geom_bar(position = "fill", stat = "identity") +
  scale_x_discrete(labels = c("1" = "Urban", "2" = "Rural")) +
  theme_minimal() +
  scale_fill_manual(
    values = c("0" = "#58cced", "1" = "#3895d3", "2" = "#072f5f"),
    labels = c("0" = "Never married", "1" = "In a marriage", "2" = "Ex-married"), 
    name = "Marital status") +
  labs(x = NULL, y = "Proportion")

# education status
p2 <-
  round((svytable(~edu_gp + v025, design = dhs)/1e6),0) %>%
  as.data.frame() %>%
  ggplot(aes(x = v025, y = Freq, fill = edu_gp)) +
  geom_bar(position = "fill", stat = "identity") +
  scale_x_discrete(labels = c("1" = "Urban", "2" = "Rural")) +
  theme_minimal() +
  scale_fill_manual(
    values = c("0" = "#072f5f", "1" = "#3895d3", "2" = "#58cced"),
    labels = c("0" = "No education", "1" = "Primary", "2" = "Secondary +"), 
    name = "Education") +
  labs(x = NULL, y = NULL)

# employment status
p3 <-
  round((svytable(~ employ_current+ v025, design = dhs)/1e6),0) %>%
  as.data.frame() %>%
  ggplot(aes(x = v025, y = Freq, fill = employ_current)) +
  geom_bar(position = "fill", stat = "identity") +
  scale_x_discrete(labels = c("1" = "Urban", "2" = "Rural")) +
  theme_minimal() +
  scale_fill_manual(
    values = c("0" = "#58cced", "1" = "#072f5f"),
    labels = c("0" = "No", "1" = "Employed"), 
    name = "Current employment") +
  labs(x = NULL, y = "Proportion")

# wealth index
p4 <-
  round((svytable(~v190 + v025, design = dhs)/1e6),0) %>%
  as.data.frame() %>%
  ggplot(aes(x = v025, y = Freq, fill = v190)) +
  geom_bar(position = "fill", stat = "identity") +
  scale_x_discrete(labels = c("1" = "Urban", "2" = "Rural")) +
  theme_minimal() +
  scale_fill_manual(
    values = c("1" = "#1e2d47", "2" = "#072f5f",
               "3" = "#1261A0", "4" = "#3895d3",
               "5" = "#58cced"),
    labels = c("1" = "Poorest", "2" = "Poorer",
               "3" = "Middle", "4" = "Richer",
               "5" = "Richest"), 
    name = "Wealth index") +
  labs(x = NULL, y = NULL)

# arrange all
gridExtra::grid.arrange(p1, p2, p3, p4, ncol = 2)
```

### 3.2 Hourglass

```{r hourglass}
round((svytable(~marital + v025 + teen_preg, design = dhs)/1e6),0) %>%
  as.data.frame() %>% 
  mutate(n = ifelse(v025 == 1, Freq * (-1), Freq * 1)) %>%
  ggplot(aes(x = marital, y = n, fill = factor(v025))) +
  geom_bar(stat = "identity") +
  scale_y_continuous(labels = abs) +
  coord_flip() +
  labs(x = "Marital status", y = "Number of cases", fill = "Residence") +
  theme(legend.position="bottom")
```

### 3.3 Points

```{r modified_points}
#compare all three lists
round((svytable(~edu_gp + v024 + v025 + teen_preg, 
                design = dhs) / 1e6), 0) %>%  as.data.frame() %>%
  ggplot(aes(x = v025, y = Freq,
             fill = factor(edu_gp))) +
  geom_point(shape = 21, alpha = 0.7, size = 5) +
  ylim (0,50) +
  theme_minimal() +
  facet_grid(rows = vars(teen_preg),
             labeller = labeller (
               teen_preg = c("0" = "No", "1" = "Teenage pregnancy")))

```

### 3.4 Correlation matrix

Can explain about relationship between variables in correlation matrix.

```{r correlationmatrix}
#prepare dataset
cordata <- finaldata %>% select(c("v025","v024","v012","edu_gp",
                                  "marital","v190","employ_current",
                                  "contra_know_any","fp_info","v467c","v467f","hv012","hv219","edu","premaritalsex","recent_migrate","type_migrate")) %>% mutate_all (as.numeric) 

#change columnames
colnames(cordata) <- c("Residance","Region","Age","Education","Marital","Wealth index","Employment","Knowledge contrac..", "Family planning","Problem - money","Problem - alone", "Household size","Sex HH head","Highest education of HH","Premarital sex", "Recent migration","Type of migration")

#ggcorrplot (can modify)
cordata <- na.omit(cordata)
ggcorrplot(cor(cordata),
           #type = "lower",
           #method = "circle",
           title="Correlogram of variables") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
```

### 3.5 U/R differences plot

```{r}

```

```{r plot difference}
diff_plot %>% 
  arrange(rural_tpr) %>%
  ggplot() +
  geom_point(aes(urban_tpr, names, color = "Urban"), alpha = 0.5, size = 3) +
  geom_point(aes(rural_tpr, names, color = "Rural"), alpha = 0.5, size = 3) +
  theme_minimal() +
  geom_segment(aes(x = urban_tpr, y = names, xend = rural_tpr, yend = names), color = 'blue', size = 0.5) +
  geom_vline(xintercept = 22, color = 'blue', linetype = 'dashed') +
  labs(x = "Percentage of teenage pregnancy", y = NULL) +
  scale_color_manual(values = c("Urban" = "green", "Rural" = "darkorange"), name = "Location") +
  guides(color = guide_legend(title = "Residence"))
```

### 3.6 Forest plots

```{r forestplot_models}
# Vectors for storing the exponentiated coefficients and their confidence intervals
coefficients <- c(1.67, 0.80, 0.74, 0.79, 0.80, 0.84)
lower_ci <- c(1.25, 0.54, 0.47, 0.50, 0.51, 0.53)
upper_ci <- c(2.48, 1.19, 1.18, 1.26, 1.26, 1.32)
names <- c("Model 1: Teenage Pregnancy Rate ~ Urban vs Rural",
            "Model 2: Model 1 + Sociodemographic",
            "Model 3: Model 2 + Socioeconomic",
            "Model 4; Model 3 + Health behaviour",
            "Model 5; Model 4 + Problem with access to services",
            "Model 6: Model 5 + Household characteristics")

forest_data_model <- data.frame(coefficients = coefficients, lower_ci = lower_ci, upper_ci = upper_ci, names = names)

forest_data_model %>%
  forestplot(
  title = "Adjusted Odd Ratios between Urban and Rural",
  mean = coefficients,
  lower = lower_ci,
  upper = upper_ci,
  labeltext = c(names,coefficients),
  clip = c(0.1,3),
  zero = 1,
  vertices = TRUE,
  lineheight = "auto",
  boxsize = 0.5
  ) %>%
  fp_add_header(
  names = c("", "Factor"),
  coefficients = c("", "OR")
  ) %>%
  fp_set_style(
    box = "#1CABE2",
    line = "#1CABE2",
    summary = "#1CABE2",
    txt_gp = fpTxtGp(
      ticks = gpar(cex = 1),
      xlab  = gpar(cex = 1.5)))
```

```{r forestplot_individuals}
##Final from Joe

# Vectors for storing the exponentiated coefficients and their confidence intervals
or <- c(1.67,1.20, 1.05,1.81,0.90,1.65,1.89,1.68,1.77,1.50,1.68)
l_ci <- c(1.25,0.89, 0.75,1.31,0.59,1.22,1.40,1.24,1.32,1.10,1.25)
u_ci <- c(2.48,1.63, 1.47,2.50,1.38,2.23,2.54,2.27,2.38,2.04,2.27)
labels <- c("Rural residence","Education", "Marital status", "Recent migration", "Household wealth", "Current employment",
            "Access to familyplanning", "Access to services",
            "Household size", "Household education", "Sex of household head")

forest_data <- data.frame(or = or, l_ci = l_ci, u_ci = u_ci, labels = labels)


forest_data %>%
  forestplot(
  title = "OR for Urban vs Rural TPR by Confounding Factors",
  mean = or,
  lower = l_ci,
  upper = u_ci,
  labeltext = c(labels,or),
  clip = c(0.1,3),
  zero = 1,
  vertices = TRUE,
  lineheight = "auto",
  boxsize = 0.5
  ) %>%
  fp_add_header(
  labels = c("", "Factor"),
  or = c("", "OR")
  ) %>%
  fp_set_style(
    box = "#1CABE2",
    line = "#1CABE2",
    summary = "#1CABE2",
    txt_gp = fpTxtGp(
      ticks = gpar(cex = 1),
      xlab  = gpar(cex = 1.5)))
```

```{r}
marital_temp <- finaldata [,c("v025","v024","marital")]


  
```

```{r}
round((svytable(~marital + v025, v024, teen_preg, design = dhs)/1e6),0) %>%
  as.data.frame() %>% 
  ggplot(aes(x = teen_preg, y = Freq, fill = marital)) +
  geom_bar(position = "fill", stat = "identity") +
  facet_wrap(~v025) +
  scale_x_discrete(labels = c("0" = "Not", "1" = "Teenage pregnancy")) +
  theme_minimal()

marital_temp <- svyby(~(marital != 0), ~v024 + v025, dhs, svymean)
marital_temp <- marital_temp [,c(1,2,4)]
marital_temp %>% 
  ggplot(aes(x = v025, y = marital, fill = )) +
  geom_bar(position = "fill", stat = "identity") +
  facet_wrap(~v025) +
  theme_minimal()
```
