## 1. Preparation

```{r checkwd}
# getwd()
```

```{r packages}
library(dplyr)
#install.packages("labelled") for labelled data
library(labelled)
# install.packages("survey") # for survey design
library(survey)
# install.packages("car")
library(car)
```

## 2. Load data

```{r load}
load("tp.RData") # Given that STATA datasets are already saved inside RData
```

## 3. Extraction

### 3.1 From Individual Recode file

```{r extract_ir}
## extract selected variables from IR
ir_data <- ir %>% select(1:8, # ID and weight
                      c(v012,v013, # age
                        v021,v023, # cluster(psu), strata (region*ur)
                        v024,v025, # place
                        v106, v190, v731, # edu, wealth, employment
                        v201, v213, v245, # pregnancy history for calculation
                        v225, v485a, # wantedness, alcohol,  
                        v304_01:v304_20, v313, v362,# contraception knowledge, current use, intention to use in future
                        v501, #current marital status
                        v701, v730,# partner age, education
                        p32_01:p32_20, # pregnancy outcomes
                        v531,v511, # Age at first sex/marriage
                        v384a:v384h, # exposure to family planning messages
                        v467b, v467c, v467d, v467f # problem access to health services
                      ))
```

### 3.2 From Household Recode file

```{r extract_hr}
## extract selected variables from HR
hr_data <- hr %>% select(1:7,
                         c(hv109_01:hv109_56,# highest education attained in the HH
                           hv005, hv021,hv023, # weight, cluster(psu), strata (region*ur)
                           hv012, # total number of HH members
                           hv219 # sex of hh head
                         )) 
```

## 4. Recode files

### 4.1 Recode IR file

```{r recode_ir}
### teenage pregnancy recode - outcome 1 = Yes, 0 = No 
ir_data <- ir_data %>% mutate(
  v013 = factor(v013),
  teen_preg = ifelse(v013 == 1 & (v201 > 0 | v245 > 0 | v213 == 1), 1, 0))
ir_data %>% group_by(teen_preg) %>% summarise(n = n()) # check grouping

### current employment - covariate 1 = Yes, 0 = No
ir_data <- ir_data %>% mutate(
  employ_current = ifelse(v731 %in% c(2,3), 1, 0))
table(ir_data$employ_current,ir_data$v731) # check grouping

### knowledge on any contraceptive method - covariate 1 = Yes, 0 = No
ir_data <- ir_data %>% mutate(
  contra_know_any = ifelse(v304_01== 1 | v304_02== 1 | v304_03== 1 | v304_04== 1 | v304_05== 1 |
                             v304_06== 1 | v304_07== 1 | v304_08== 1 | v304_09== 1 | v304_10== 1 |
                             v304_11== 1 | v304_12== 1 | v304_13== 1 | v304_14== 1 | v304_15== 1 |
                             v304_16== 1 | v304_17== 1 | v304_18== 1 | v304_19== 1 | v304_20== 1, 1, 0))
ir_data %>% group_by(contra_know_any) %>% summarise(n = n()) # check grouping

### current contraceptive use - covariate 1 = Yes, 0 = No
ir_data <- ir_data %>% mutate(
  contra_current = ifelse(v313 %in% c(1,2,3), 1, 0))
table(ir_data$contra_current,ir_data$v313) # check grouping

### intention to use contraception in the future - covariate 1 = Yes, 0 = No
ir_data <- ir_data %>%  mutate(
    contra_future = case_when(
      is.na(v362) ~ NA_real_,  # Preserve NA values
      v362 %in% c(2, 4) ~ 1,   # Assign 1 when v362 is 2 or 4
      TRUE ~ 0                 # Assign 0 otherwise
    ))
table(ir_data$contra_future,ir_data$v362, useNA = "always") # check grouping

### marital status recode from 5 to 3 categories
ir_data <- ir_data %>% 
  mutate(
    marital = dplyr::recode(v501, `0` = "0", `1` = "1", `2` = "1",
                            `3` = "2", `4` = "2", `5` = "2")
  )
table(ir_data$marital,ir_data$v501, useNA = "always") # check grouping

### age at first sex recode to recode 0, 97, 98 to na
ir_data <- ir_data %>% 
  mutate(v531 = ifelse(v531 %in% c(0, 97, 98), NA, v531))
summary(ir_data$v531) # check range

### partner education recode 8 to na
ir_data <- ir_data %>% 
  mutate(v701 = ifelse(v701 == 8, NA, v701))
ir_data %>% group_by(v701) %>% summarize (n = n()) # check range

### access to informaiton about family planning - covariate 1 = Yes, 0 = No
ir_data <- ir_data %>% mutate(
  fp_info = ifelse(v384a == 1 | v384b == 1 | v384c == 1 | v384d == 1 | 
                     v384e == 1 | v384f == 1 | v384g == 1 | v384h == 1, 1, 0))
ir_data %>% group_by(fp_info) %>% summarise(n = n()) # check grouping
# alternative: data %>% group_by(v384a,v384b,v384c,v384d,v384e,v384f,v384g,v384h) %>% summarize (count = n())
```

### 4.2 Recode HR file

```{r recode_hr}
### recode hh education 98 to na
hr_data <- hr_data %>%
  mutate(across(starts_with("hv109_"), ~ifelse(. == 98, NA, .)))
summary(hr_data$hv109_01) # check range

### recode highest education attainment of a household
hr_data <- hr_data %>%
  rowwise() %>% # rowwise (household-wise) calculation
  mutate(edu = ifelse(all(is.na(c_across(hv109_01:hv109_56))), NA, # return NA if all NA
                      pmax(c_across(hv109_01:hv109_56), na.rm = TRUE))) # return max value of all columns
hr_data %>% group_by(edu) %>% summarise(n = n()) # check grouping
```

## 5. Join datasets

```{r join}
data <- left_join(ir_data, select(hr_data, hv001, hv002, hv005, hv021, hv023, hv012, hv219, edu), 
                       by = c("v001" = "hv001", "v002" = "hv002")) # join by cluster and household numbers
```

## 6. Preparatory

### 6.1 Subset for adolescents

```{r subset}
teendata <- data %>% filter(v013 == 1) # create dataset with only teenagers
```

### 6.2 Create design objects

```{r design}
### survey design for individual level
dhs <- svydesign(id=~v021, strata =~v023, weights=~v005, data=teendata) # create design

### survey design for household level - ***NOT USED***
# dhs_hr <- svydesign(id=~hv021, strata =~hv023, weights=~hv005, data=teendata)
```

## 7. Summary statistics

### 7.1 Sample size

```{r samplesize}
### Sample size individuals and weighted in urban and rural
sumtotal <- data %>% group_by (v025) %>%
  summarise(total = n(), total_weight = round(sum(v005)/1e6,0)) 
sumteen <- data %>% filter (v013 ==1) %>% group_by (v025) %>%
  summarize (teen = n(), teen_weight = round(sum(v005)/1e6,0))
samplesize_ur <- cbind(sumtotal,sumteen[,2:3]) # create dataframe
print(samplesize_ur) # print table

### Sample size individuals and weighted in regions
sumtotal_region <- data %>% group_by (v024) %>%
  summarise(total = n(), total_weight = round(sum(v005)/1e6,0)) 
sumteen_region <- data %>% filter (v013 ==1) %>% group_by (v024) %>%
  summarize (teen = n(), teen_weight = round(sum(v005)/1e6,0))
samplesize_region <- cbind(sumtotal_region,sumteen_region[,2:3]) # create dataframe
print(samplesize_region) # print table

### Sample size for 15-19 who ever had pregnant
tp_table <- svytable(~teen_preg + v025, design = dhs)
tp_table <- round(tp_table / 1e6,0)
print(tp_table)
```

### 7.2 Teenage pregnancy rate

```{r tprate}
### teenage pregnancy rate in urban and rural
tpr_ur_raw <- svyby(~(teen_preg == 1), ~v025, dhs, svymean, vartype=c("ci"))
tpr_ur <- tpr_ur_raw [,c(1,3,5,7)] # filter for proportion and CI
print(tpr_ur*1000)

### teenage pregnancy rate in regions
tpr_region_raw <- svyby(~(teen_preg == 1), ~v024, dhs, svymean, vartype=c("se","ci"))
tpr_region <- tpr_region_raw [,c(1,3)]
print(tpr_region*1000)

### teenage pregnancy rate by strata for mapping - urban/rural in each region
tpr_strata_raw <- svyby(~(teen_preg == 1), ~v024 + v025, dhs, svymean, vartype=c("ci"))
tpr_strata <- tpr_strata_raw [,c(1,2,4,6,8)]
tpr_strata <- tpr_strata %>% mutate (tpr = tpr_strata[,3]*100)
# write.csv(tpr_strata, "tp_map.csv", row.names = T) # to save csv
```

### 7.3 Outcome of teenage pregnancy

```{r teenpregoutcome}
# pregnancy loss - 183 never had a live birth
round(svytable(~teen_preg + v201 + v025, design = dhs, na.action = na.pass)/1e6,0)
svychisq(~v201 + v025, design = dhs, statistics = "design") # chisq for v201vsv025 means number of livebirths against urban/rural

# pregnancy loss - 618 never had a pregnancy loss
round(svytable(~teen_preg + v245 + v025, design = dhs, na.action = na.pass)/1e6,0)
svychisq(~v245 + v025, design = dhs, statistics = "design") # chisq for v245vsv025 means pregnancy loss against urban/rural
```

## 8. Descriptive statistics, disaggregated by urban and rural

'teendata', which is subset of joined dataset for 15-19 women respondents will be used for descriptive analysis. Design is also set on same dataset, i.e., 'teendata'.

Sample code to correct and round up the numbers in svytables, but I didn't use it to correct myself.

```{r correct table}
#round(your_svytable/1e6,0)
```

### 8.1 **Socio-demographic factors**

```{r sd}
### age
svyby(formula = ~v012, by = ~v025, design = dhs, FUN = svymean, vartype=c("ci"))
svyttest(v012 ~ v025, design = dhs) # t-test for pvalue

### education
svytable(~v106 + v025, design = dhs)
svychisq(~v106 + v025, design = dhs, statistics = "design")

### current marital status
svytable(~marital + v025, design = dhs)
svychisq(~marital + v025, design = dhs, statistics = "design")

### age at first marriage/union
svyby(formula = ~v511, by = ~v025, design = dhs, FUN = svymean, vartype=c("ci"),
      na.rm = TRUE) # exlude NA - 2,576 did not respond/never been in a union
svyttest(v511 ~ v025, design = dhs)

### age at first sex
svyby(formula = ~v531, by = ~v025, design = dhs, FUN = svymean, vartype=c("ci"),
      na.rm = TRUE) # exlude NA - 2,576 did not respond/never been in a union
svyttest(v531 ~ v025, design = dhs)
```

### 8.2 **Current partner's characteristics**

```{r partner}
### partner age
svyby(formula = ~v730, by = ~v025, design = dhs, FUN = svymean, vartype=c("ci"),
      na.rm = TRUE) # exlude NA - 2,576 did not respond/never been in a union
svyttest(v730 ~ v025, design = dhs)

### partner education status
svytable(~v701 + v025, design = dhs)
svychisq(~v701 + v025, design = dhs, statistics = "design")
```

### **8.3 Socio-Economic**

```{r sd_household}
### HH wealth index
svytable(~v190 + v025, design = dhs)
svychisq(~v190 + v025, design = dhs, statistics = "design")

### employment
svytable(~employ_current + v025, design = dhs)
svychisq(~employ_current + v025, design = dhs, statistics = "design")
```

### 8.4 Health behaviour

```{r hbehaviour}
### wantness (no respondent - 2,982)
svytable(~v225 + v025, design = dhs)
svychisq(~v225 + v025, design = dhs, statistics = "design")

### knoweldge on contraceptive methods
svytable(~contra_know_any + v025, design = dhs)
svychisq(~contra_know_any + v025, design = dhs, statistics = "design")

### current contraceptive use
svytable(~contra_current + v025, design = dhs)
svychisq(~contra_current + v025, design = dhs, statistics = "design")

### intention to use contraception in the future
svytable(~contra_future + v025, design = dhs)
svychisq(~contra_future + v025, design = dhs, statistics = "design")

### access to information about family planning
svytable(~fp_info + v025, design = dhs)
svychisq(~fp_info + v025, design = dhs, statistics = "design")
```

### 8.5 Problem with access to health services

```{r problemaccess}
### problem with access to health services - permission to go
svytable(~v467b + v025, design = dhs)
svychisq(~v467b + v025, design = dhs, statistics = "design")

### problem with access to health services - money needed
svytable(~v467c + v025, design = dhs)
svychisq(~v467c + v025, design = dhs, statistics = "design")

### problem with access to health services - distance
svytable(~v467d + v025, design = dhs)
svychisq(~v467d + v025, design = dhs, statistics = "design")

### problem with access to health services - not want to go alone
svytable(~v467f + v025, design = dhs)
svychisq(~v467f + v025, design = dhs, statistics = "design")
```

### 8.6 Household characteristics

```{r hhcharac}
### household size
svyby(formula = ~hv012, by = ~v025, design = dhs, FUN = svymean, vartype=c("ci"))
svyttest(hv012 ~ v025, design = dhs)

### highest household education attainment
svytable(~edu + v025, design = dhs)
svychisq(~edu + v025, design = dhs, statistics = "design")

### sex of household head
svytable(~hv219 + v025, design = dhs)
svychisq(~hv219 + v025, design = dhs, statistics = "design")
```

## 9. Prepare dataset for regression analysis

'teendata', which is subset of joined dataset for 15-19 women respondents will be used for descriptive analysis. Design is also set on same dataset, i.e., 'teendata'.

### 9.1 Missingness

Firstly, get cascade of values using survey package. Note that numbers may different if survey package is not used. Among total 3,083 (15-59) respondents, 678 are classified as Teenage pregnancy - who ever had pregnant. 2,463 - never married, 564 - currently married, 56 - ended.

```{r getnumbers}
## check numbers
teendata %>% summarise(total_weight = round(sum(v005)/1e6,0))  # number of total sample - 3,083
round(svytotal(~teen_preg==1, design = dhs) / 1e6,0) # number of who ever pregnant (TP) - 678
round(svytotal(~marital==1, design = dhs) / 1e6,0) # currently married - 564
round(svytotal(~marital==2, design = dhs) / 1e6,0) # ended married - 56
round(svytotal(~marital==0, design = dhs) / 1e6,0) # never married - 2463
round(svytotal(~v213==1, design = dhs) / 1e6,0) # currently pregnant - 186

```

Then, columns with missing values are explored. Please be noted that not all columns are used in the analysis.

```{r missingness}
## check columns with NA
na_list <- colnames(teendata)[colSums(is.na(teendata)) > 0] 

## NA details
for (col in na_list) {
  na_count <- sum(is.na(teendata[[col]]))
  cat("Variable", col, "> NAs", na_count, "\n")
}
```

**v225 -** questions about current pregnancy with 2,982 NAs. Given that 2,898 are not currently pregnant. **Finding:** No NA among 'currently pregnant' \> no missing. In analysis, to filter only those who are currently pregnant.

```{r na_currentpregnant}
table(teendata$v213, teendata$v225, useNA = "always") # no missing variable
round(svytable(~v213 + v225 + v025, design = dhs, na.action = na.pass)/1e6,0) 
```

**v362/contra_future -** Not used, coded into other variable. Question asked to those who are not currently using contraceptive AND who are currently married.

```{r na_contrafuture}
table(teendata$contra_current, teendata$contra_future, useNA = "always") # can't identify exact numbers
round(svytable(~contra_future + v025, design = dhs, na.action = na.pass)/1e6,0) # this table is used to calculate n in table
```

**v701, v730 -** questions about partners with 2,631 NAs. Given that 2,519 (2,463 - never and 56 - ended) are not currently married. **Finding:** NA among 'currently married' is neglegible amount. In analysis, to filter only those who are currently married.

```{r na_maritalrelated}
# education
table(teendata$marital, teendata$v701, useNA = "always") # can see all never/ended married are NA, and some NA from married
round(svytable(~marital + v701, design = dhs, na.action = na.pass)/1e6,0) # n = 560

# age
table(teendata$marital, teendata$v730, useNA = "always") #
round(svytable(~marital + v730, design = dhs, na.action = na.pass)/1e6,0) # n = 564 
```

**v531, v511 -** questions about age at first sex and age at first marriage. Given that 2,519 (2,463 - never and 56 - ended) are not currently married. **Finding:** NA among 'currently/ended married' is neglegible amount. In analysis, to filter only those who are currently married.

```{r checks}
table(teendata$marital, teendata$v511, useNA = "always") # can see all NA from never got married
table(teendata$marital, teendata$v531, useNA = "always") # most NA from never got married
```

**p32 -** questions about age pregnancy outcomes. **Finding:** No missing detected

```{r na_pregorder}
### p32 - questions about pregnancy outcome againsts livebirths
table(teendata$v201, teendata$p32_01, useNA = "always") # first preg - all NA are never had a child v201 = 0 > no missing
table(teendata$v201, teendata$p32_02, useNA = "always") # second preg - all NA v201 = 0 or 1 > no missing
table(teendata$v201, teendata$p32_03, useNA = "always") # third preg - all NA v201 = 0,1,2 > no missing
table(teendata$v201, teendata$p32_04, useNA = "always") # fourth preg - all NA v201 = 0,1,2,3 > no missing
table(teendata$v201, teendata$p32_05, useNA = "always") # no one has fith preg

### p32 - questions about pregnancy outcome againsts pregnancy loss
table(teendata$v245, teendata$p32_01, useNA = "always") # all NA are among who never loss pregnancy
```

**edu** - when checking un-weighted data, 48 out of 3,142 records about edu are NAs. **Finding** - Will use complete case

```{r na_edu}
table (teendata$edu, teendata$teen_preg, useNA = "always") # 48 NAs (44 - No TP; 4 - TP)
table (teendata$edu, teendata$v025, useNA = "always") # 48 NAs (23 - Urban; 25 - Rural)
```

### 9.2 Subset final dataset, so that can omit NAs for regression

```{r finalsubset}
# NOT DONE YET
finaldata <- teendata %>% select (c(
  v005, v021, v023, # for design
  teen_preg, # outcome 
  v025, # exposure
  v024, # region
  v012,v106,marital,  # socio demographic - age, education, marital,
  v190,employ_current, # socio economnic - wealth, employment,
  contra_know_any, fp_info, # health behaviour - knowledge contraceptive, heard about FP messages
  v467b,v467c,v467d,v467f, # problem access to services - permission, money, distance, alone
  hv012, hv219, edu, # hh characteristics - HH size, sex of hh head, highest edu in hh, 
  v701, v730, v531, v511, contra_current # for univarite - partner education, partner age, age at first sex, age at first marriage, contraceptive use
))

# relevel 4 problem to access variables
finaldata$v467b <- relevel(factor(finaldata$v467b), ref = "2")
finaldata$v467c <- relevel(factor(finaldata$v467c), ref = "2")
finaldata$v467d <- relevel(factor(finaldata$v467d), ref = "2")
finaldata$v467f <- relevel(factor(finaldata$v467f), ref = "2")

# factorize 
finaldata$teen_preg <- factor(finaldata$teen_preg)
```

```{r finaldesign}
dhsfinal <- svydesign(id = ~v021, strata = ~v023, weights = ~v005, data = finaldata)
```

## 10. Regression

### 10.1 Bivariate

```{r bivariate}
# v025: urban rural
model_v025 <- svyglm(teen_preg ~ factor(v025),
                    design = dhsfinal, family = binomial(), na.action = na.exclude)
print (exp (coef(model_v025)[2]))
print (exp (confint(model_v025)[2, ]))
print (summary(model_v025)$coefficients[2,"Pr(>|t|)"])

# v024: regions
model_v024 <- svyglm(teen_preg ~ factor(v024),
                    design = dhsfinal, family = binomial(), na.action = na.exclude)
print (exp (coef(model_v024)))
print (exp (confint(model_v024)))
print (summary(model_v024)$coefficients[,"Pr(>|t|)"])

# v012: age (Note: older girls have higher chance to get pregnant naturally)
model_v012 <- svyglm(teen_preg ~ v012,
                    design = dhsfinal, family = binomial(), na.action = na.exclude)
print (exp (coef(model_v012)[2]))
print (exp (confint(model_v012)[2, ]))
print (summary(model_v012)$coefficients[2,"Pr(>|t|)"])

# v106: education
model_v106 <- svyglm(teen_preg ~ factor(v106),
                    design = dhsfinal, family = binomial(), na.action = na.exclude)
print (exp (coef(model_v106)))
print (exp (confint(model_v106)))
print (summary(model_v106)$coefficients[,"Pr(>|t|)"])

# marital: marital status
model_marital <- svyglm(teen_preg ~ factor(marital),
                    design = dhsfinal, family = binomial(), na.action = na.exclude)
print (exp (coef(model_marital)))
print (exp (confint(model_marital)))
print (summary(model_marital)$coefficients[,"Pr(>|t|)"])

# v190: HH wealth index
model_v190 <- svyglm(teen_preg ~ factor(v190),
                    design = dhsfinal, family = binomial(), na.action = na.exclude)
print (exp (coef(model_v190)))
print (exp (confint(model_v190)))
print (summary(model_v190)$coefficients[,"Pr(>|t|)"])

# employ_current: Current employment status
model_employ_current <- svyglm(teen_preg ~ factor(employ_current),
                    design = dhsfinal, family = binomial(), na.action = na.exclude)
print (exp (coef(model_employ_current)[2]))
print (exp (confint(model_employ_current)[2, ]))
print (summary(model_employ_current)$coefficients[2,"Pr(>|t|)"])

# contra_know_any: knowledge on contraceptive methods
model_contra_know_any <- svyglm(teen_preg ~ factor(contra_know_any),
                    design = dhsfinal, family = binomial(), na.action = na.exclude)
print (exp (coef(model_contra_know_any)[2]))
print (exp (confint(model_contra_know_any)[2, ]))
print (summary(model_contra_know_any)$coefficients[2,"Pr(>|t|)"])

# fp_info: Heard about family planning message
model_fp_info <- svyglm(teen_preg ~ factor(fp_info),
                    design = dhsfinal, family = binomial(), na.action = na.exclude)
print (exp (coef(model_fp_info)[2]))
print (exp (confint(model_fp_info)[2, ]))
print (summary(model_fp_info)$coefficients[2,"Pr(>|t|)"])

# v467b: Problem in 'getting permission' to access health services
model_v467b <- svyglm(teen_preg ~ factor(v467b),
                    design = dhsfinal, family = binomial(), na.action = na.exclude)
print (exp (coef(model_v467b)[2]))
print (exp (confint(model_v467b)[2, ]))
print (summary(model_v467b)$coefficients[2,"Pr(>|t|)"])

# v467c: Problem in 'money needed' to access health services
model_v467c <- svyglm(teen_preg ~ factor(v467c),
                    design = dhsfinal, family = binomial(), na.action = na.exclude)
print (exp (coef(model_v467c)[2]))
print (exp (confint(model_v467c)[2, ]))
print (summary(model_v467c)$coefficients[2,"Pr(>|t|)"])

# v467d: Problem in 'distance' to access health services
model_v467d <- svyglm(teen_preg ~ factor(v467d),
                    design = dhsfinal, family = binomial(), na.action = na.exclude)
print (exp (coef(model_v467d)[2]))
print (exp (confint(model_v467d)[2, ]))
print (summary(model_v467d)$coefficients[2,"Pr(>|t|)"])

# v467f: Problem in 'not want to go alone' to access health services
model_v467f<- svyglm(teen_preg ~ factor(v467f),
                    design = dhsfinal, family = binomial(), na.action = na.exclude)
print (exp (coef(model_v467f)[2]))
print (exp (confint(model_v467f)[2, ]))
print (summary(model_v467f)$coefficients[2,"Pr(>|t|)"])

# hv012: Size of household
model_hv012<- svyglm(teen_preg ~ hv012,
                    design = dhsfinal, family = binomial(), na.action = na.exclude)
print (exp (coef(model_hv012)[2]))
print (exp (confint(model_hv012)[2, ]))
print (summary(model_hv012)$coefficients[2,"Pr(>|t|)"])

# hv219: Sex of household head - reference = 1 male
model_hv219<- svyglm(teen_preg ~ factor(hv219),
                    design = dhsfinal, family = binomial(), na.action = na.exclude)
print (exp (coef(model_hv219)[2]))
print (exp (confint(model_hv219)[2, ]))
print (summary(model_hv219)$coefficients[2,"Pr(>|t|)"])
```

Couldn't calculate p-value for following bivariate models

```{r bivariate_need na.omit data}
# edu: Highest education attainment in a HH
model_edu <- svyglm(teen_preg ~ factor(edu),
                    design = dhsfinal, family = binomial(), na.action = na.exclude)
print (exp (coef(model_edu)))
print (exp (confint(model_edu)))
#print (summary(model_edu)$coefficients[2,"Pr(>|t|)"]) # Issue here

# v730: age
model_v730<- svyglm(teen_preg ~ v730,
                    design = dhsfinal, family = binomial(), na.action = na.exclude)
print (exp (coef(model_v730)[2]))
print (exp (confint(model_v730)[2,]))
#print (summary(model_v730)$coefficients[2,"Pr(>|t|)"]) # issue here

# v701: Partners education
model_v701<- svyglm(teen_preg ~ factor(v701),
                    design = dhsfinal, family = binomial(), na.action = na.exclude)
print (exp (coef(model_v701)))
print (exp (confint(model_v701)))
# print (summary(model_v730)$coefficients[2,"Pr(>|t|)"]) # issue here

# v531: Age at first sex
model_v531 <- svyglm(teen_preg ~ v531,
                    design = dhsfinal, family = binomial(), na.action = na.exclude)
print (exp (coef(model_v531)[2]))
print (exp (confint(model_v531)[2, ]))
# print (summary(model_v531)$coefficients[2,"Pr(>|t|)"]) # issue here

# v511: Age at first marriage/union
model_v511 <- svyglm(teen_preg ~ v511,
                    design = dhsfinal, family = binomial(), na.action = na.exclude)
print (exp (coef(model_v511)[2]))
print (exp (confint(model_v511)[2, ]))
# print (summary(model_v511)$coefficients[2,"Pr(>|t|)"]) # issue here

# contra_current: Current contraceptive use
model_contra_current <- svyglm(teen_preg ~ factor(contra_current),
                    design = dhsfinal, family = binomial(), na.action = na.exclude)
print (exp (coef(model_contra_current)[2]))
print (exp (confint(model_contra_current)[2, ]))
#print (summary(model_contra_current)$coefficients[2,"Pr(>|t|)"]) # issue here
```

### 10.2 Multiple variable logistic regression

Forward approach:

-   Model 1: Socio-demographic - age, education, marital status

```{r model1}
# age, education, marital status
modelm_1 <- svyglm(teen_preg ~ factor(v025) + 
                      v012 + factor (v106) + factor (marital),
                   design = dhsfinal, family = binomial(), na.action = na.exclude)

print (exp (coef(modelm_1)))
print (exp (confint(modelm_1)))
print (summary(modelm_1)$coefficients[,"Pr(>|t|)"])
```

-   Model 2: Model 1+ Socio-economic - wealth index, employment

```{r model2}
# wealth index, employment
modelm_2 <- svyglm(teen_preg ~ factor(v025) + 
                     v012 + factor (v106) + factor (marital) + 
                     factor (v190) + factor (employ_current), 
                   design = dhsfinal, family = binomial(), na.action = na.exclude)

print (exp (coef(modelm_2)))
print (exp (confint(modelm_2)))
print (summary(modelm_2)$coefficients[,"Pr(>|t|)"])
```

-   Model 3: Model 2 + Health behaviour - knowledge on contraceptive, heard family planning

```{r model3}
# knowledge on contraceptive, heard family planning
modelm_3 <- svyglm(teen_preg ~ factor(v025) + 
                     v012 + factor (v106) + factor (marital) + 
                     factor (v190) + factor (employ_current) +
                     factor (contra_know_any) + factor (fp_info),
                   design = dhsfinal, family = binomial(), na.action = na.exclude)

print (exp (coef(modelm_3)))
print (exp (confint(modelm_3)))
print (summary(modelm_3)$coefficients[,"Pr(>|t|)"])
```

-   Model 4: Model 3 + Problem with access to services - all 4

```{r model4}
# permission, money, distance, alone
modelm_4 <- svyglm(teen_preg ~ factor(v025) + 
                     v012 + factor (v106) + factor (marital) + 
                     factor (v190) + factor (employ_current) +
                     factor (contra_know_any) + factor (fp_info) +
                     factor (v467b) + factor (v467c) +factor (v467d) +factor (v467f),
                   design = dhsfinal, family = binomial(), na.action = na.exclude)

print (exp (coef(modelm_4)))
print (exp (confint(modelm_4)))
print (summary(modelm_4)$coefficients[,"Pr(>|t|)"])
```

-   Model 5: Model 4 + HH characteristics - hh size, sex of hh head

```{r model5}
# hh size, sex of hh head
modelm_5 <- svyglm(teen_preg ~ factor(v025) + 
                     v012 + factor (v106) + factor (marital) + 
                     factor (v190) + factor (employ_current) +
                     factor (contra_know_any) + factor (fp_info) +
                     factor (v467b) + factor (v467c) +factor (v467d) +factor (v467f) +
                     hv012 + factor (hv219),
                   design = dhsfinal, family = binomial(), na.action = na.exclude)

print (exp (coef(modelm_5)))
print (exp (confint(modelm_5)))
print (summary(modelm_5)$coefficients[,"Pr(>|t|)"])
```

### 10.3 Check multicolinearity by VIF

All 5 models are checked for multicolinearity.

```{r VIF}
# Calculate VIF values to check high VIF values (>5)
car::vif(modelm_5)
```

### 10.4 Check assumptions

```{r checkassumptions}
par(mfrow = c(2, 2))
plot(modelm_5)
```

Test whether GitHub work
